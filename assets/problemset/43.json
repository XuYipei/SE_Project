{
  "id": "43",
  "title": "Router",
  "type": "traditional",
  "sections": [
    {
      "title": "",
      "content": "\u003cp\u003e在进行 Web 后端开发时，很重要的一个组件是 router。通常来说，后端的代码由许多 action 组成，router 的作用就是将发来的请求按照 URL 对应到相应的 action 上。\u003c/p\u003e\u003cp\u003e请求到达后端 Web 服务器时，已经不需要考虑域名和端口了，因此一个请求有如下形式：\u003c/p\u003e\u003cp\u003e“\u003csamp\u003e/{something_1}/{something_2}/.../{something_k}\u003c/samp\u003e” 或 “\u003csamp\u003e/{something_1}/{something_2}/.../{something_k}?{parameter_list}\u003c/samp\u003e”\u003c/p\u003e\u003cp\u003e其中 parameter_list 的组成为：“\u003csamp\u003e{name_1}={value_1}\u0026amp;{name_2}={value_2}\u0026amp;...\u0026amp;{name_n}={value_n}\u003c/samp\u003e”。（第一种情况中的 parameter_list 为空）\u003c/p\u003e\u003cp\u003e例如 “\u003csamp\u003e/user/list/show?gender=male\u0026amp;birthyear=1990\u003c/samp\u003e” 就是一个合法的请求，其中包含了两个参数 gender 和 birthyear，对应的 value 分别是 male 和 1990。\u003c/p\u003e\u003cp\u003erouter 由许多条 path 组成，每一个 path 会对应到一个 action 上。router 在匹配 URL 到 path 时只看 parameter_list 之前的部分，例如之前的请求就只看 “\u003csamp\u003e/user/list/show\u003c/samp\u003e” 这部分。parameter_list 内的参数会被直接送到 action 中。因此一个 path 总是具有如下形式：\u003c/p\u003e\u003cp\u003e“\u003csamp\u003e/{something_1}/{something_2}/.../{something_k}\u003c/samp\u003e”\u003c/p\u003e\u003cp\u003e为了使得 router 更灵活，每一段中的 something 除了可以用具体的字符串外，还可以用一个正则表达式去匹配，并且提取出这部分的内容作为参数送到 action 去。这种情况下，something 的内容为“\u003csamp\u003e:{regexp_name}\u003c/samp\u003e”，其中 regexp_name 对应一个正则表达式，会在后面给出具体的表达式。例如 router 中的一个 path 为 “\u003csamp\u003e/user/:handle/show\u003c/samp\u003e”，其中“\u003csamp\u003e:handle\u003c/samp\u003e” 对应了一个正则表达式，假设它可以匹配所有由小写英文字母组成的非空串。此时请求 “\u003csamp\u003e/user/testuser/show\u003c/samp\u003e” 就能匹配这个 path，并且送往 action 多了一个 name 为 handle、value 为 testuser 的参数。再例如请求为 “\u003csamp\u003e/user/testuser/show?avatar=true\u0026amp;message=hello\u003c/samp\u003e” 的话，不仅能匹配之前的 path，送到 action 的参数就会有三个：handle、avatar、message，对应的 value 分别为 testuser、true 和 hello。\u003c/p\u003e\u003cp\u003e但是使用带正则表达式的 path 时也受到一些限制。具体来说，如果有 router 中有两个 path，他们前面 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-1\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-2\"\u003ei\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-1\"\u003ei\u003c/script\u003e 个 something 段的内容完全相同（这 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-3\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-4\"\u003ei\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-2\"\u003ei\u003c/script\u003e 段里面可以含正则表达式项，此时就要求是名称相同的正则表达式），然后第 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-5\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-6\"\u003ei\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-7\" style=\"margin-left: 0.267em; margin-right: 0.267em;\"\u003e+\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-8\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-3\"\u003ei+1\u003c/script\u003e 个 something 段的内容不同。下面分两种情况：\u003c/p\u003e\u003col\u003e\u003cli\u003e一个 path 这一段的内容是普通字符串，另一个 path 这一段的内容对应了正则表达式，那么这个正则表达式一定无法匹配前一个 path 第 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-9\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-10\"\u003ei\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-11\" style=\"margin-left: 0.267em; margin-right: 0.267em;\"\u003e+\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-12\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-4\"\u003ei+1\u003c/script\u003e 段的字符串。例如一个 path 是 “\u003csamp\u003e/foo/:tmp/bar/pop\u003c/samp\u003e”，另一个 path 是 “\u003csamp\u003e/foo/:tmp/:exp/push\u003c/samp\u003e”，那么 exp 对应的正则表达式一定不会匹配 bar。\u003c/li\u003e\n\u003cli\u003e两个 path 这一段的内容都是正则表达式，那么这两个正则表达式匹配的字符串一定没有交集。例如一个 path 是 “\u003csamp\u003e/foo/:tmp/:aaa/push\u003c/samp\u003e”，另一个 path 是 “\u003csamp\u003e/foo/:tmp/:bbb/pop\u003c/samp\u003e”，那么不存在一个字符串能同时被 aaa 对应的正则表达式和 bbb 对应的正则表达式匹配。\u003c/li\u003e\n\u003c/ol\u003e\u003cp\u003e最后介绍正则表达式。为了让情况简单一些，本题中的正则表达式规则相比于实际使用的有所简化。正则表达式的文法中有 Atom、Quantifier、Term、Alternative 这几个概念。用 Regexp 表示正则表达式，则每种概念具体为：\u003c/p\u003e\u003col\u003e\u003cli\u003eRegexp 可以由单个 Alternative 组成，或者由一个 Alternative 和一个 Regexp 组成，中间用字符 “\u003csamp\u003e|\u003c/samp\u003e” 连接。对于前一种情况，该正则表达式匹配所有 Alternative 能匹配的东西。对于后一种情况，一个字符串要能被该正则表达式匹配，要么能被 “\u003csamp\u003e|\u003c/samp\u003e” 前面的 Alternative 能匹配，要么能被 “\u003csamp\u003e|\u003c/samp\u003e” 后面的 Regexp所匹配。\u003c/li\u003e\n\u003cli\u003eAlternative 由单个 Term 或多个 Term 连接组成，它能匹配这些 Term 所匹配的字符串的连接。换言之，一个字符串要被这个 Alternative 匹配，这个字符串能够拆成若干段（段数和 Alternative 的 Term 个数一样多），每段依次被 Alternative 的每个 Term 匹配。\u003c/li\u003e\n\u003cli\u003eTerm 由一个 Atom 或一个 Atom 附带一个 Quantifier 组成。后面会了解到，Quantifier 对应了允许重复次数的区间。若 Term 由单个 Atom 组成，则 Term 能匹配的内容与 Atom 相同。如果 Atom 后带了 Quantifier，则如果一个字符串能划分为若干段（划分的段数在 Quantifier 指定的区间内），使得每段都能被 Atom 匹配，那么这个字符串就能被这个 Term 匹配。\u003c/li\u003e\n\u003cli\u003eQuantifier 的形式为 “\u003csamp\u003e{lower_bound,upper_bound}\u003c/samp\u003e”，其中 lower_bound 和 upper_bound 各对应一个不超过 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-13\"\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-14\"\u003e20\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-5\"\u003e20\u003c/script\u003e 的非负整数，并且 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-15\"\u003e\u003cspan class=\"MJXp-mtext\" id=\"MJXp-Span-16\"\u003eupper_bound\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-17\" style=\"margin-left: 0.333em; margin-right: 0.333em;\"\u003e≥\u003c/span\u003e\u003cspan class=\"MJXp-mtext\" id=\"MJXp-Span-18\"\u003elower_bound\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-6\"\u003e\\text{upper_bound} \\geq \\text{lower_bound}\u003c/script\u003e，Quantifier 对应的区间为闭区间 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-19\"\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-20\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e[\u003c/span\u003e\u003cspan class=\"MJXp-mtext\" id=\"MJXp-Span-21\"\u003elower_bound\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-22\" style=\"margin-left: 0em; margin-right: 0.222em;\"\u003e,\u003c/span\u003e\u003cspan class=\"MJXp-mtext\" id=\"MJXp-Span-23\"\u003eupper_bound\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-24\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e]\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-7\"\u003e[\\text{lower_bound}, \\text{upper_bound}]\u003c/script\u003e。注意 upper_bound 可以为空（此时中间的逗号还是有的），upper_bound 为空表示上界为无穷大。\u003csamp\u003e{1,3}\u003c/samp\u003e, \u003csamp\u003e{0,1}\u003c/samp\u003e, \u003csamp\u003e{2,2}\u003c/samp\u003e, \u003csamp\u003e{3,}\u003c/samp\u003e 均为合法的 Quantifier，但 \u003csamp\u003e{3,2}\u003c/samp\u003e, \u003csamp\u003e{,1}\u003c/samp\u003e 就不合法。\u003c/li\u003e\n\u003cli\u003eAtom 有三种形式：第一种为单个字符，这里字符约定只能是英文字符（包括大写和小写）和数字，这种形式下的 Atom 所能匹配的内容就是该字符。第二种形式为字符区间，具体形式为 “\u003csamp\u003e[lower-upper]\u003c/samp\u003e”，这里 lower 和 upper 各为单个字符，满足要么同时为小写英文字母、要么同时为大写字母、要么同时为数字，并且 lower 的ASCII码不小于 upper 的ASCII码，这种情况下的 Atom 所能匹配的内容就是这个区间内的字符（包括 lower 和 upper）。第三种形式是 “\u003csamp\u003e(Regexp)\u003c/samp\u003e”，即一个合法的正则表达式套上一对括号，这种情况下该 Atom 能匹配的内容和括号内的正则表达式相同。\u003c/li\u003e\n\u003c/ol\u003e\u003cp\u003e根据以上文法，“\u003csamp\u003e[0-9]{1,3}\u003c/samp\u003e” 为合法的正则表达式，它能匹配长度为 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-25\"\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-26\"\u003e1\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-27\" style=\"margin-left: 0.333em; margin-right: 0.333em;\"\u003e∼\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-28\"\u003e3\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-8-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-8\"\u003e1 \\sim 3\u003c/script\u003e 且由数字组成的字符串。“\u003csamp\u003e([a-z]|[0-9]){3,10}\u003c/samp\u003e” 也为合法的正则表达式，它能匹配长度为 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-29\"\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-30\"\u003e3\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-31\" style=\"margin-left: 0.333em; margin-right: 0.333em;\"\u003e∼\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-32\"\u003e10\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-9-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-9\"\u003e3 \\sim 10\u003c/script\u003e 且由小写英文字母和数字组成的字符串。更复杂的一个例子为 “\u003csamp\u003e01[0-1]{0,}|10[0-1]{0,}\u003c/samp\u003e”，它能匹配所有 \u003csamp\u003e01\u003c/samp\u003e 或 \u003csamp\u003e10\u003c/samp\u003e 开头的 \u003csamp\u003e01\u003c/samp\u003e 字符串。\u003c/p\u003e",
      "misc": ""
    },
    {
      "title": "输入格式",
      "content": "\u003cp\u003e第一个一个正整数 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-33\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-34\"\u003eT\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-10-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-10\"\u003eT\u003c/script\u003e，表示数据的组数。下面依次给出每组数据。\u003c/p\u003e\u003cp\u003e每组数据的第一行包含一个正整数 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-35\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-36\"\u003eN\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-11-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-11\"\u003eN\u003c/script\u003e，表示 router 中有 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-37\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-38\"\u003eN\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-12-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-12\"\u003eN\u003c/script\u003e 个 path。下面 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-39\"\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-40\"\u003e2\u003c/span\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-41\"\u003eN\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-13-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-13\"\u003e2N\u003c/script\u003e 行，每两行描述一个 path，第一行为 path 匹配的 URL，形式为\u003c/p\u003e\u003cp\u003e“\u003csamp\u003e/{something_1}/{something_2}/.../{something_k}\u003c/samp\u003e”\u003c/p\u003e\u003cp\u003e每段 something 要么为具体的字符串（由大写英文字母、小写英文字母和数字组成且长度在 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-42\"\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-43\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e[\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-44\"\u003e1\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-45\" style=\"margin-left: 0em; margin-right: 0.222em;\"\u003e,\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-46\"\u003e50\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-47\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e]\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-14-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-14\"\u003e[1,50]\u003c/script\u003e 内），要么为 “\u003csamp\u003e:{regexp_name}\u003c/samp\u003e”，其中 regexp_name 由大写和小写英文字母组成且长度不超过 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-48\"\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-49\"\u003e30\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-15-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-15\"\u003e30\u003c/script\u003e。具体的正则表达式会在之后的输入中给出。描述该 path 的第二行为对应的 action 名称（由大写和小写英文字母组成，长度在 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-50\"\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-51\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e[\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-52\"\u003e1\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-53\" style=\"margin-left: 0em; margin-right: 0.222em;\"\u003e,\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-54\"\u003e30\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-55\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e]\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-16-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-16\"\u003e[1,30]\u003c/script\u003e 内）。\u003c/p\u003e\u003cp\u003e下面若干行描述前面 path 中出现的所有正则表达式，每行描述一个正则表达式，每行内包含两个非空字符串（由一个空格隔开），前面的字符串表示 regexp_name，后面的字符串表示对应正则表达式（长度不超过 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-56\"\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-57\"\u003e50\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-17-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-17\"\u003e50\u003c/script\u003e）。注意同一个 regexp_name 可能在前面给出的 path 中出现多次（一个 path 中出现多次或在不同 path 中出现），这种情况下他们对应的正则表达式是相同的，并且输入中只会描述一次。数据同时保证这里给出的 regexp_name 都至少在一个 path 中出现过。\u003c/p\u003e\u003cp\u003e下面一行包含一个正整数 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-58\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-59\"\u003eM\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-18-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-18\"\u003eM\u003c/script\u003e，表示有 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-60\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-61\"\u003eM\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-19-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-19\"\u003eM\u003c/script\u003e 个请求发了过来。下面 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-62\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-63\"\u003eM\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-20-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-20\"\u003eM\u003c/script\u003e 行，每行描述一个请求的 URL。URL 为 “\u003csamp\u003e/{something_1}/{something_2}/.../{something_k}\u003c/samp\u003e” 或 “\u003csamp\u003e/{something_1}/{something_2}/.../{something_k}?{name_1}={value_1}\u0026amp;{name_2}={value_2}\u0026amp;...\u0026amp;{name_n}={value_n}\u003c/samp\u003e” 的形式，其中所有 something 和 value 都由大写英文字母、小写英文字母和数字组成且长度在 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-64\"\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-65\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e[\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-66\"\u003e1\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-67\" style=\"margin-left: 0em; margin-right: 0.222em;\"\u003e,\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-68\"\u003e50\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-69\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e]\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-21-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-21\"\u003e[1,50]\u003c/script\u003e 内，所有 name 都由大写和小写英文字母组成且长度在 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-70\"\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-71\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e[\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-72\"\u003e1\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-73\" style=\"margin-left: 0em; margin-right: 0.222em;\"\u003e,\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-74\"\u003e30\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-75\" style=\"margin-left: 0em; margin-right: 0em;\"\u003e]\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-22-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-22\"\u003e[1,30]\u003c/script\u003e 内。\u003c/p\u003e",
      "misc": ""
    },
    {
      "title": "输出格式",
      "content": "\u003cp\u003e对于每组数据，先单独一行输出 “\u003csamp\u003eCase #{case_no}:\u003c/samp\u003e”（不含引号），其中 case_no 表示当前是第几组数据（从 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-76\"\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-77\"\u003e1\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-23-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-23\"\u003e1\u003c/script\u003e 开始编号）。\u003c/p\u003e\u003cp\u003e每行输出依次对应每个请求。如果没有 path 能够匹配该请求的 URL，输出 “\u003csamp\u003e404 Not Found\u003c/samp\u003e”。\u003c/p\u003e\u003cp\u003e如果有 path 能够匹配改请求，输出 “\u003csamp\u003eRequest matches action \"{action_name}\" with parameters {parameter_list}\u003c/samp\u003e”，其中 action_name 为匹配 path 对应 action 的名称，parameter_list 为所有的参数。\u003c/p\u003e\u003cul\u003e\u003cli\u003e其中 parameter_list 用一个字典的方式输出。例如有三个参数，他们的 name 为 avatar、message 和 page，对应的 value 分别为 true、hello 和 2，那么输出的 parameter_list 为 “\u003csamp\u003e{\"avatar\":\"true\",\"message\":\"hello\",\"page\":\"2\"}\u003c/samp\u003e”（所有参数按照 name 的字典序排列）。\u003c/li\u003e\n\u003cli\u003e注意一个请求中，拥有相同 name 的参数可能出现多次，例如请求的 URL 为 “\u003csamp\u003e/user/me/show?name=you\u0026amp;name=he\u003c/samp\u003e”，匹配的 path 为 “\u003csamp\u003e/user/:name/show\u003c/samp\u003e”，此时的 parameter_list 为 “\u003csamp\u003e{\"name\":[\"me\",\"you\",\"he\"]}\u003c/samp\u003e”。方括号里面按照参数在请求 URL 中出现的次序给出。\u003c/li\u003e\n\u003cli\u003e更多具体的例子请参考样例。数据能够保证一个请求不会被多个 path 匹配。\u003c/li\u003e\n\u003c/ul\u003e",
      "misc": ""
    },
    {
      "title": "限制与约定",
      "content": "\u003cp\u003e对于 30% 的数据，path 中不会出现正则表达式；\u003c/p\u003e\u003cp\u003e对于 100% 的数据，\u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-78\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-79\"\u003eN\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-80\" style=\"margin-left: 0em; margin-right: 0.222em;\"\u003e,\u003c/span\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-81\"\u003eM\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-82\" style=\"margin-left: 0.333em; margin-right: 0.333em;\"\u003e≤\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-83\"\u003e20000\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-24-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-24\"\u003eN, M \\leq 20000\u003c/script\u003e，\u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-84\"\u003e\u003cspan class=\"MJXp-mi MJXp-italic\" id=\"MJXp-Span-85\"\u003eT\u003c/span\u003e\u003cspan class=\"MJXp-mo\" id=\"MJXp-Span-86\" style=\"margin-left: 0.333em; margin-right: 0.333em;\"\u003e≤\u003c/span\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-87\"\u003e5\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-25-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-25\"\u003eT \\leq 5\u003c/script\u003e，输入文件大小不超过 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-88\"\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-89\"\u003e10\u003c/span\u003e\u003cspan class=\"MJXp-mrow\" id=\"MJXp-Span-90\"\u003e\u003cspan class=\"MJXp-mtext MJXp-mono\" id=\"MJXp-Span-91\"\u003eMB\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-26-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-26\"\u003e10\\texttt{MB}\u003c/script\u003e。不同名称的正则表达式最多有 \u003cspan class=\"MathJax_Preview\" style=\"color: inherit;\"\u003e\u003cspan class=\"MJXp-math\" id=\"MJXp-Span-92\"\u003e\u003cspan class=\"MJXp-mn\" id=\"MJXp-Span-93\"\u003e50\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"MathJax MathJax_Processing\" id=\"MathJax-Element-27-Frame\" tabindex=\"0\"\u003e\u003c/span\u003e\u003cscript type=\"math/tex\" id=\"MathJax-Element-27\"\u003e50\u003c/script\u003e 个。\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e注意此题数据是良心数据。\u003c/strong\u003e\u003c/p\u003e",
      "misc": ""
    },
    {
      "title": "来源",
      "content": "\u003cp\u003e中国国家队清华集训2014~2015 Day 3 - By 贾志鹏\u003c/p\u003e",
      "misc": ""
    },
    {
      "title": "下载",
      "content": "\u003cp\u003e\u003ca href=\"/download.php?type=problem\u0026amp;id=43\"\u003e样例数据下载\u003c/a\u003e\u003c/p\u003e",
      "misc": ""
    }
  ],
  "samples": [
    {
      "title": "样例一",
      "input": "\u003cpre\u003e3\n3\n/user/:id/show\nuserShow\n/message/list\nmessageList\n/message/:id/show\nmessageShow\nid [0-9]{2,4}\n3\n/message/list\n/user/123/show?avatar=true\n/message/5312/show?page=1\n1\n/foo/:id/:bar/:bar\nfun\nid [0-9]{2,4}\nbar [a-z]{1,3}\n1\n/foo/777/az/bc?bar=xyz\u0026amp;bar=zzz\n2\n/user/:handle/show\nuserShow\n/user/:id/show\nuserShow\nid [0-9]{2,4}\nhandle ([a-z]|[A-Z])([a-z]|[A-Z]|[0-9]){4,10}\n4\n/user/259/show\n/user/wjmzbmr/show?like=true\n/user/0xxx/show\n/user/WJMZBMR/show?love=true\n\n\u003c/pre\u003e",
      "output": "\u003cpre\u003eCase #1:\nRequest matches action \"messageList\" with parameters {}\nRequest matches action \"userShow\" with parameters {\"avatar\":\"true\",\"id\":\"123\"}\nRequest matches action \"messageShow\" with parameters {\"id\":\"5312\",\"page\":\"1\"}\nCase #2:\nRequest matches action \"fun\" with parameters {\"bar\":[\"az\",\"bc\",\"xyz\",\"zzz\"],\"id\":\"777\"}\nCase #3:\nRequest matches action \"userShow\" with parameters {\"id\":\"259\"}\nRequest matches action \"userShow\" with parameters {\"handle\":\"wjmzbmr\",\"like\":\"true\"}\n404 Not Found\nRequest matches action \"userShow\" with parameters {\"handle\":\"WJMZBMR\",\"love\":\"true\"}\n\n\u003c/pre\u003e",
      "explanation": "",
      "misc": ""
    }
  ],
  "tags": [
    "UOJ",
    "清华集训2014"
  ],
  "rules": {
    "runtime": "20000000000",
    "memory": "268435456",
    "stack": "268435456",
    "source": "51200"
  },
  "meta": {
    "created": "2021-04-09T21:29:56.079271913+08:00",
    "updated": "2021-04-09T21:29:56.079271913+08:00",
    "checked": "2021-04-09T21:29:56.079271913+08:00"
  },
  "misc": ""
}
